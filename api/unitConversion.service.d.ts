/**
 * SparkWorks Core API
 * Management Service for the SparkWorks Processing Engine
 *
 * OpenAPI spec version: v2.0
 * Contact: info@sparkworks.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */ 
import { HttpClient, HttpHeaders, HttpResponse, HttpEvent } from '@angular/common/http';
import { Observable } from 'rxjs';
import { UnitConversionCreateDTO } from '../model/unitConversionCreateDTO';
import { UnitConversionDTO } from '../model/unitConversionDTO';
import { UnitConversionQueryDTO } from '../model/unitConversionQueryDTO';
import { Configuration } from '../configuration';
export declare class UnitConversionService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);
    /**
     * @param consumes string[] mime-types
     * @return true: consumes contains 'multipart/form-data', false: otherwise
     */
    private canConsumeForm;
    /**
     * Create a Unit Conversion
     * A Spark Works Accounts authenticated user is able to create a Unit Conversion.
     * @param body Unit Conversion Create API Model
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    createUnitConversion(body: UnitConversionCreateDTO, observe?: 'body', reportProgress?: boolean): Observable<UnitConversionDTO>;
    createUnitConversion(body: UnitConversionCreateDTO, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UnitConversionDTO>>;
    createUnitConversion(body: UnitConversionCreateDTO, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UnitConversionDTO>>;
    /**
     * Delete a Unit Conversion by its UUID
     * A Spark Works Accounts authenticated user is able to delete a Unit Conversion by its UUID.
     * @param uuid The Unit Conversion UUID
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    deleteUnitConversion(uuid: string, observe?: 'body', reportProgress?: boolean): Observable<any>;
    deleteUnitConversion(uuid: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    deleteUnitConversion(uuid: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * Retrieve a collection of Unit Conversions
     * A Spark Works Accounts authenticated user is able to retrieve all of the Platform Unit Conversions.
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    getAllUnitConversions(observe?: 'body', reportProgress?: boolean): Observable<Array<UnitConversionDTO>>;
    getAllUnitConversions(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<UnitConversionDTO>>>;
    getAllUnitConversions(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<UnitConversionDTO>>>;
    /**
     * Retrieve a Unit Conversion by its UUID
     * A Spark Works Accounts authenticated user is able to retrieve a Unit Conversion.
     * @param uuid The Unit Conversion UUID
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    getUnitConversionByUuid(uuid: string, observe?: 'body', reportProgress?: boolean): Observable<UnitConversionDTO>;
    getUnitConversionByUuid(uuid: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UnitConversionDTO>>;
    getUnitConversionByUuid(uuid: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UnitConversionDTO>>;
    /**
     * Retrieve a List of Unit Conversions by a query
     * A Spark Works Accounts authenticated user is able to retrieve a List of Unit Conversion.
     * @param body Unit Conversion Query API Model
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    queryUnitConversions(body: UnitConversionQueryDTO, observe?: 'body', reportProgress?: boolean): Observable<Array<UnitConversionDTO>>;
    queryUnitConversions(body: UnitConversionQueryDTO, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<UnitConversionDTO>>>;
    queryUnitConversions(body: UnitConversionQueryDTO, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<UnitConversionDTO>>>;
}
